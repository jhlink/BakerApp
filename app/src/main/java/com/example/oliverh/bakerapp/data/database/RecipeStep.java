package com.example.oliverh.bakerapp.data.database;

import android.arch.persistence.room.ColumnInfo;
import android.arch.persistence.room.Entity;
import android.arch.persistence.room.ForeignKey;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.Index;
import android.arch.persistence.room.PrimaryKey;

import com.example.oliverh.bakerapp.Constants;
import com.squareup.moshi.Json;

import java.util.Locale;

import static android.arch.persistence.room.ForeignKey.CASCADE;

@Entity(foreignKeys = @ForeignKey(entity = Recipe.class,
        parentColumns = "id",
        childColumns = "recipe_id",
        onDelete = CASCADE),
        indices = {@Index("recipe_id")})
public class RecipeStep {
    //  The following two properties need clarification.
    //      recipeStepId or recipe_step_id is the autogenerated "UNIQUE" PrimaryKey
    //      required by Room.
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "recipe_step_id")
    private transient int recipeStepId;

    //  stepIndex or recipe_step_index refers to the instruction step index.
    //      The step ids found in the raw JSON file imply that the order of the recipe instructions
    //      and the id progression are the same.
    @ColumnInfo(name = "recipe_step_index")
    @Json(name = "id")
    private int stepIndex;

    @ColumnInfo(name = "recipe_id")
    private transient int recipeId;

    @ColumnInfo(name = "short_description")
    private String shortDescription;

    @ColumnInfo(name = "description")
    private String description;

    @ColumnInfo(name = "video_url")
    @Json(name = "videoURL")
    private String videoUrl = Constants.INVALID_URL;

    @ColumnInfo(name = "thumbnail_url")
    @Json(name = "thumbnailURL")
    private String thumbnailUrl = Constants.INVALID_URL;

    // No parameter constructor used by Moshi to initialize missing fields
    //  within inbound JSON objects.
    //  SRC: https://github.com/square/moshi#default-values--constructors
    // Ensure that Room ignores this constructor
    @SuppressWarnings("unused")
    @Ignore
    public RecipeStep() {}

    public RecipeStep(int recipeStepId, int stepIndex, int recipeId, String shortDescription, String description, String videoUrl, String thumbnailUrl) {
        this.recipeStepId = recipeStepId;
        this.stepIndex = stepIndex;
        this.recipeId = recipeId;
        this.shortDescription = shortDescription;
        this.description = description;
        this.videoUrl = videoUrl;
        this.thumbnailUrl = thumbnailUrl;
    }

    public int getRecipeStepId() {
        return recipeStepId;
    }

    public void setRecipeStepId(int recipeStepId) {
        this.recipeStepId = recipeStepId;
    }

    public int getStepIndex() {
        return stepIndex;
    }

    public void setStepIndex(int stepIndex) {
        this.stepIndex = stepIndex;
    }

    public int getRecipeId() {
        return recipeId;
    }

    public void setRecipeId(int recipeId) {
        this.recipeId = recipeId;
    }

    public String getShortDescription() {
        return shortDescription;
    }

    public void setShortDescription(String shortDescription) {
        this.shortDescription = shortDescription;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getVideoUrl() {
        return videoUrl;
    }

    public void setVideoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
    }

    public String getThumbnailUrl() {
        return thumbnailUrl;
    }

    public void setThumbnailUrl(String thumbnailUrl) {
        this.thumbnailUrl = thumbnailUrl;
    }

    @Override
    public String toString() {
        String compiled = String.format(Locale.ENGLISH, "RecipeId: %d, Step #: %s, S_Desc: %s, Desc: %s, videoUrl: %s, thumbnailUrl: %s",
                recipeId, stepIndex, shortDescription, description, videoUrl, thumbnailUrl);
        return compiled;
    }
}
